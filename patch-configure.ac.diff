--- configure.ac.bak	2013-06-01 13:59:25.000000000 -0400
+++ configure.ac	2013-06-01 16:31:06.000000000 -0400
@@ -12,7 +12,7 @@
 #
 
 # Require autoconf >= 2.61
-AC_PREREQ(2.61)
+AC_PREREQ([2.61])
 
 # Init autoconf
 AC_INIT([ultrastardx], 
@@ -26,14 +26,31 @@
 AC_SUBST(PACKAGE_IRC)
 
 # Specify a source-file so autoconf can check if the source-dir exists
-AC_CONFIG_SRCDIR(src/ultrastardx.dpr)
+AC_CONFIG_SRCDIR([src/ultrastardx.dpr])
 
 # Set the path to install-sh
-AC_CONFIG_AUX_DIR(dists/autogen)
+AC_CONFIG_AUX_DIR([dists/autogen])
+
+# Path to extra m4 macros
+AC_CONFIG_MACRO_DIR([dists/autogen/m4])
+
+# Path to configure header 
+# (not needed as this project isn't C, but whatever)
+AC_CONFIG_HEADERS([config.h])
 
 # show features and packages in one list
 AC_PRESERVE_HELP_ORDER
 
+# Use automake
+AM_INIT_AUTOMAKE([foreign])
+AM_MAINTAINER_MODE
+
+# From the autoconf-archive package
+AX_CHECK_GNU_MAKE
+
+# Find what platform this is
+AC_CANONICAL_HOST
+
 # -----------------------------------------
 # find tools
 # -----------------------------------------
@@ -47,10 +64,14 @@
 # find the best install tool
 AC_PROG_INSTALL
 # some other useful tools
-#AC_PROG_AWK
+AC_PROG_AWK
 AC_PROG_SED
 AC_PROG_GREP
-#AC_PROG_EGREP
+AC_PROG_EGREP
+
+# Other things to check
+AC_EXEEXT
+AC_PATH_PROG([UNAME],[uname])
 
 # -----------------------------------------
 # macro declarations
@@ -93,8 +114,8 @@
 Development options:])
 
 # add DEPRECATED global and local options
-AC_ARG_ENABLE(global, [AS_HELP_STRING([--enable-global], [(DEPRECATED, DO NOT USE]))])
-AC_ARG_ENABLE(local, [AS_HELP_STRING([--enable-local], [(DEPRECATED, DO NOT USE]))])
+AC_ARG_ENABLE([global], [AS_HELP_STRING([--enable-global], [(DEPRECATED, DO NOT USE]))])
+AC_ARG_ENABLE([local], [AS_HELP_STRING([--enable-local], [(DEPRECATED, DO NOT USE]))])
 
 if [[ x$enable_global != x -o x$enable_local != x ]]; then
    AC_MSG_NOTICE([
@@ -106,7 +127,7 @@
    sleep 2
 fi
 
-AC_ARG_ENABLE(debug,
+AC_ARG_ENABLE([debug],
   [AS_HELP_STRING([--enable-debug],
     [Enable debug build @<:@default=no@:>@])],
   [test $enableval = "yes" && ENABLE_DEBUG="yes"], [])
@@ -116,7 +137,7 @@
 # check for compilers
 # -----------------------------------------
 
-AC_CANONICAL_HOST
+# AC_CANONICAL_HOST used to be here; now it's further up
 
 # find and test the freepascal compiler
 # sets PFLAGS, FPC_VERSION, FPC_DEBUG, etc.
@@ -133,7 +154,7 @@
 AC_PROG_RANLIB
 
 # find pkg-config
-PKG_PROG_PKG_CONFIG()
+PKG_PROG_PKG_CONFIG([])
 if [[ x$PKG_CONFIG = x ]]; then
    AC_MSG_ERROR([
 !!! pkg-config was not found on your system. 
@@ -143,28 +164,39 @@
 
 
 # -----------------------------------------
-# check for OS
+# check for OS-specific features
 # -----------------------------------------
 
 if test x$FPC_PLATFORM = xdarwin; then
    AC_MACOSX_VERSION
+   AC_PATH_PROG([OTOOL],[otool])
+   AC_PATH_PROG([INSTALL_NAME_TOOL],[install_name_tool])
+   AC_PATH_PROG([HDIUTIL],[hdiutil])
 fi
 
 # -----------------------------------------
 # check for libraries
 # -----------------------------------------
 
-# libpng
-PKG_HAVE([libpng], [libpng12], yes)
+# find libpng
+# pkgconfig name for 1.2 is "libpng12", for 1.4 "libpng"
+PKG_HAVE([libpng], [libpng12], [no])
+if [[ x$libpng_HAVE = xyes ]]; then
+    PKG_VERSION([libpng], [libpng12])
+else
+    # check for the generic .pc file
+    PKG_HAVE([libpng], [libpng >= 1.2], [yes])
+    PKG_VERSION([libpng], [libpng >= 1.2])
+fi
 
 # find sdl
-PKG_HAVE([sdl], [sdl], yes)
+PKG_HAVE([sdl], [sdl], [yes])
 
 # find freetype
-PKG_HAVE([freetype], [freetype2], yes)
+PKG_HAVE([freetype], [freetype2], [yes])
 
 # find sqlite3
-PKG_HAVE([sqlite3], [sqlite3], yes)
+PKG_HAVE([sqlite3], [sqlite3], [yes])
 
 # find lua 5.1
 # (K)Ubuntu uses lua5.1.pc, Mac OS X and other 
@@ -185,14 +217,14 @@
 #   A check for version >=52.0.0 will return version 0d.51.1.2 
 #   although it is lower because pkg-config is confused by the 0d.
 # Use [mylib]_VERSION_INT for version-checking instead
-PKG_HAVE([libavcodec], [libavcodec], yes)
+PKG_HAVE([libavcodec], [libavcodec], [yes])
 PKG_VERSION([libavcodec], [libavcodec])
 AC_CHECK_LIB([avcodec], [avcodec_decode_audio], [HAVE_AVCODEC_DECODE_AUDIO="yes"])
 AC_CHECK_LIB([avcodec], [avcodec_decode_audio2], [HAVE_AVCODEC_DECODE_AUDIO2="yes"])
 AC_CHECK_LIB([avcodec], [img_convert], [HAVE_IMG_CONVERT="yes"])
-PKG_HAVE([libavformat], [libavformat], yes)
+PKG_HAVE([libavformat], [libavformat], [yes])
 PKG_VERSION([libavformat], [libavformat])
-PKG_HAVE([libavutil], [libavutil], yes)
+PKG_HAVE([libavutil], [libavutil], [yes])
 PKG_VERSION([libavutil], [libavutil])
 if [[ x$libavcodec_HAVE = xyes -a x$libavformat_HAVE = xyes -a x$libavutil_HAVE = xyes ]]; then
     ffmpeg_HAVE=yes
@@ -202,14 +234,14 @@
 AC_SUBST_DEFINE(HAVE_FFMPEG, $ffmpeg_HAVE)
 
 # find FFMpeg's swscale lib (just if FFMpeg is compiled in GPL mode)
-PKG_HAVE([libswscale], [libswscale], no)
+PKG_HAVE([libswscale], [libswscale], [no])
 PKG_VERSION([libswscale], [libswscale])
-AC_SUBST_DEFINE(HAVE_SWSCALE, $libswscale_HAVE)
+AC_SUBST_DEFINE([HAVE_SWSCALE], [$libswscale_HAVE])
 
 
 # find projectM version
 libprojectM_PKG="libprojectM >= 0.98"
-PKG_HAVE([libprojectM], [$libprojectM_PKG], no)
+PKG_HAVE([libprojectM], [$libprojectM_PKG], [no])
 PKG_VERSION([libprojectM], [$libprojectM_PKG])
 AC_SUBST_DEFINE(HAVE_PROJECTM, $libprojectM_HAVE)
 # get projectM include-dir
@@ -227,13 +259,14 @@
 AC_SUBST(USE_PROJECTM_CWRAPPER, $libprojectM_USE_CWRAPPER)
 
 # find portaudio
-PKG_HAVE([portaudio], [portaudio-2.0], yes)
+PKG_HAVE([portaudio], [portaudio-2.0], [yes])
 PKG_VERSION([portaudio], [portaudio-2.0])
-AC_SUBST_DEFINE(HAVE_PORTAUDIO, $portaudio_HAVE)
+AC_SUBST_DEFINE([HAVE_PORTAUDIO], [$portaudio_HAVE])
+
 
 # find pcre
 libpcre_PKG="libpcre"
-PKG_HAVE([libpcre], [$libpcre_PKG], no)
+PKG_HAVE([libpcre], [$libpcre_PKG], [no])
 PKG_VERSION([libpcre], [$libpcre_PKG])
 AC_SUBST_DEFINE(HAVE_LIBPCRE, $libpcre_HAVE)
 # get libpcre library dir
@@ -246,8 +279,9 @@
 
 # determine linker-flags
 if test x$FPC_PLATFORM = xdarwin; then
-  LDFLAGS="-macosx_version_min 10.4 -undefined dynamic_lookup"
+  LDFLAGS="-macosx_version_min 10.4 -undefined dynamic_lookup -headerpad_max_install_names"
 fi
+
 #LIBS=
 AC_SUBST(LDFLAGS)
 AC_SUBST(LIBS)
@@ -257,6 +291,7 @@
 # -----------------------------------------
 
 AC_CONFIG_FILES([Makefile])
+AC_CONFIG_FILES([Makefile-non-automake])
 AC_CONFIG_FILES([src/Makefile])
 AC_CONFIG_FILES([src/config-$FPC_PLATFORM.inc:src/config.inc.in])
 if [[ x$libprojectM_USE_CWRAPPER = xyes ]]; then
